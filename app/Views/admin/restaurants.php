<?= $this->extend('layouts/admin') ?>

<?= $this->section('title') ?>Manage Restaurants - Georgian Food Admin<?= $this->endSection() ?>

<?= $this->section('content') ?>
<div class="container-fluid py-4">
    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">
                <i class="fas fa-utensils me-2 text-primary"></i>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏
            </h1>
            <p class="text-muted mb-0">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏</p>
        </div>
        <div class="btn-group">
            <a href="<?= base_url('admin/restaurants/add') ?>" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω
            </a>
            <button type="button" class="btn btn-info dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown">
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="<?= base_url('admin/import') ?>">
                    <i class="fas fa-download me-1"></i>–ò–º–ø–æ—Ä—Ç –∏–∑ DataForSEO
                </a></li>
                <li><a class="dropdown-item" href="<?= base_url('admin/geocode') ?>">
                    <i class="fas fa-map-marker-alt me-1"></i>–ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
                </a></li>
                <li><a class="dropdown-item" href="<?= base_url('admin/google-photos') ?>">
                    <i class="fab fa-google me-1"></i>Google Photos
                </a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#" onclick="autoDetectTypes()">
                    <i class="fas fa-magic me-1"></i>–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
                </a></li>
            </ul>
        </div>
    </div>

    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å -->
    <?php if (isset($stats)): ?>
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex flex-wrap gap-2">
                <span class="badge bg-light text-dark fs-6 py-2 px-3">
                    <i class="fas fa-utensils me-1"></i>–í—Å–µ–≥–æ: <?= $stats['total_all'] ?? 0 ?>
                </span>
                <a href="<?= base_url('admin/restaurants') ?>" 
                   class="badge bg-<?= ($filters['status'] ?? 'active') === 'active' ? 'success' : 'outline-success' ?> text-decoration-none fs-6 py-2 px-3">
                    <i class="fas fa-check me-1"></i>–ê–∫—Ç–∏–≤–Ω—ã—Ö: <?= $stats['total_active'] ?? 0 ?>
                </a>
                <a href="<?= base_url('admin/restaurants?' . http_build_query(array_merge($filters, ['status' => 'inactive']))) ?>" 
                   class="badge bg-<?= ($filters['status'] ?? '') === 'inactive' ? 'secondary' : 'outline-secondary' ?> text-decoration-none fs-6 py-2 px-3">
                    <i class="fas fa-pause me-1"></i>–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: <?= $stats['total_inactive'] ?? 0 ?>
                </a>
                
                <?php if (($filters['status'] ?? 'active') !== '' || !$show_all): ?>
                <a href="<?= base_url('admin/restaurants?show_all=1') ?>" 
                   class="badge bg-info text-decoration-none fs-6 py-2 px-3">
                    <i class="fas fa-eye me-1"></i>–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                </a>
                <?php endif; ?>
            </div>
        </div>
    </div>
    <?php endif; ?>

    <!-- –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ —Å –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º -->
    <div class="card shadow mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-filter me-2"></i>–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
                </h6>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="rememberFilters" 
                           <?= !empty($saved_filters_exist ?? false) ? 'checked' : '' ?>>
                    <label class="form-check-label text-muted small" for="rememberFilters">
                        <i class="fas fa-memory me-1"></i>–ó–∞–ø–æ–º–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                    </label>
                </div>
            </div>
        </div>
        <div class="card-body">
            <form method="GET" id="filterForm" class="row g-3">
                <!-- –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É -->
                <div class="col-md-3">
                    <label for="search" class="form-label">–ü–æ–∏—Å–∫</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="search" name="search" 
                               value="<?= esc($filters['search'] ?? '') ?>" 
                               placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ, –∞–¥—Ä–µ—Å, –æ–ø–∏—Å–∞–Ω–∏–µ...">
                        <button class="btn btn-outline-secondary" type="button" onclick="clearSearch()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>

                <!-- –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É -->
                <div class="col-md-2">
                    <label for="city" class="form-label">–ì–æ—Ä–æ–¥</label>
                    <select class="form-select" name="city" id="city">
                        <option value="">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
                        <?php foreach ($cities as $city): ?>
                            <option value="<?= $city['id'] ?>" 
                                    <?= ($filters['city_id'] ?? '') == $city['id'] ? 'selected' : '' ?>>
                                <?= esc($city['name']) ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>

                <!-- –¢–∏–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (3 —Å–æ—Å—Ç–æ—è–Ω–∏—è) -->
                <div class="col-md-2">
                    <label for="restaurant_type" class="form-label">–¢–∏–ø</label>
                    <select class="form-select" name="restaurant_type" id="restaurant_type">
                        <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                        <option value="georgian" <?= ($filters['restaurant_type'] ?? '') === 'georgian' ? 'selected' : '' ?>>
                            üá¨üá™ –ì—Ä—É–∑–∏–Ω—Å–∫–∏–µ
                        </option>
                        <option value="non_georgian" <?= ($filters['restaurant_type'] ?? '') === 'non_georgian' ? 'selected' : '' ?>>
                            üçΩÔ∏è –û–±—ã—á–Ω—ã–µ
                        </option>
                        <option value="undetermined" <?= ($filters['restaurant_type'] ?? '') === 'undetermined' ? 'selected' : '' ?>>
                            ‚ùì –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
                        </option>
                        <option value="auto_detected" <?= ($filters['restaurant_type'] ?? '') === 'auto_detected' ? 'selected' : '' ?>>
                            ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
                        </option>
                    </select>
                </div>

                <!-- –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ -->
                <div class="col-md-2">
                    <label for="status" class="form-label">–°—Ç–∞—Ç—É—Å</label>
                    <select class="form-select" name="status" id="status">
                        <option value="active" <?= ($filters['status'] ?? 'active') === 'active' ? 'selected' : '' ?>>
                            ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ
                        </option>
                        <option value="inactive" <?= ($filters['status'] ?? '') === 'inactive' ? 'selected' : '' ?>>
                            ‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
                        </option>
                        <option value="" <?= empty($filters['status']) && $show_all ? 'selected' : '' ?>>
                            üîç –í—Å–µ
                        </option>
                    </select>
                </div>

                <!-- –ù–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö -->
                <div class="col-md-2">
                    <label for="data_filter" class="form-label">–î–∞–Ω–Ω—ã–µ</label>
                    <select class="form-select" name="data_filter" id="data_filter">
                        <option value="">–í—Å–µ</option>
                        <option value="no_coords" <?= ($filters['data_filter'] ?? '') === 'no_coords' ? 'selected' : '' ?>>
                            –ë–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
                        </option>
                        <option value="no_photos" <?= ($filters['data_filter'] ?? '') === 'no_photos' ? 'selected' : '' ?>>
                            –ë–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                        </option>
                        <option value="no_place_id" <?= ($filters['data_filter'] ?? '') === 'no_place_id' ? 'selected' : '' ?>>
                            –ë–µ–∑ Place ID
                        </option>
                        <option value="has_website" <?= ($filters['data_filter'] ?? '') === 'has_website' ? 'selected' : '' ?>>
                            –° –≤–µ–±-—Å–∞–π—Ç–æ–º
                        </option>
                    </select>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                <div class="col-md-1 d-flex align-items-end">
                    <div class="btn-group w-100">
                        <button type="submit" class="btn btn-primary" title="–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã">
                            <i class="fas fa-search"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="resetFilters()" title="–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã">
                            <i class="fas fa-undo"></i>
                        </button>
                    </div>
                </div>
            </form>

            <!-- –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã -->
            <?php if (!empty(array_filter($filters)) || $show_all): ?>
                <div class="mt-3">
                    <div class="d-flex flex-wrap align-items-center gap-2 mb-2">
                        <span class="text-muted me-2">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</span>
                        
                        <!-- –§–∏–ª—å—Ç—Ä—ã —Ç–∏–ø–æ–≤ -->
                        <?php if (empty($filters['restaurant_type'])): ?>
                            <div class="btn-group btn-group-sm">
                                <a href="<?= base_url('admin/restaurants?' . http_build_query(array_merge($filters, ['restaurant_type' => 'georgian']))) ?>" 
                                   class="btn btn-outline-success btn-sm">
                                    üá¨üá™ –¢–æ–ª—å–∫–æ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–µ
                                </a>
                                <a href="<?= base_url('admin/restaurants?' . http_build_query(array_merge($filters, ['restaurant_type' => 'undetermined']))) ?>" 
                                   class="btn btn-outline-warning btn-sm">
                                    ‚ùì –¢—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
                                </a>
                            </div>
                        <?php endif; ?>
                        
                        <!-- –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ -->
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="autoDetectTypes()">
                            <i class="fas fa-magic me-1"></i>–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
                        </button>
                        
                        <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º -->
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="saveCurrentFilters()" 
                                title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã">
                            <i class="fas fa-save me-1"></i>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                        </button>
                        
                        <!-- –°–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearAllFilters()">
                            <i class="fas fa-times me-1"></i>–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë
                        </button>
                    </div>
                    
                    <!-- –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã -->
                    <div class="mt-2">
                        <small class="text-muted">–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</small>
                        <?php foreach ($filters as $key => $value): ?>
                            <?php if (!empty($value)): ?>
                                <span class="badge bg-primary me-1">
                                    <?php
                                    $filterDisplayNames = [
                                        'search' => '–ü–æ–∏—Å–∫: ' . $value,
                                        'status' => $value === 'active' ? '‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ' : ($value === 'inactive' ? '‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ' : $value),
                                        'restaurant_type' => [
                                            'georgian' => 'üá¨üá™ –ì—Ä—É–∑–∏–Ω—Å–∫–∏–µ',
                                            'non_georgian' => 'üçΩÔ∏è –û–±—ã—á–Ω—ã–µ', 
                                            'undetermined' => '‚ùì –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã',
                                            'auto_detected' => '‚ö†Ô∏è –¢—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏'
                                        ][$value] ?? $value,
                                        'data_filter' => [
                                            'no_coords' => '–ë–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç',
                                            'no_photos' => '–ë–µ–∑ —Ñ–æ—Ç–æ',
                                            'no_place_id' => '–ë–µ–∑ Place ID',
                                            'has_website' => '–° —Å–∞–π—Ç–æ–º'
                                        ][$value] ?? $value,
                                        'city_id' => '–ì–æ—Ä–æ–¥: ' . ($cities[array_search($value, array_column($cities, 'id'))]['name'] ?? $value)
                                    ];
                                    
                                    echo $filterDisplayNames[$key] ?? ucfirst($key) . ': ' . $value;
                                    ?>
                                    <button type="button" class="btn-close btn-close-white ms-1" 
                                            onclick="removeFilter('<?= $key ?>')" 
                                            style="font-size: 0.6em;" title="–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä"></button>
                                </span>
                            <?php endif; ?>
                        <?php endforeach; ?>
                        
                        <?php if ($show_all): ?>
                            <span class="badge bg-info me-1">üîç –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ</span>
                        <?php endif; ?>
                        
                        <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
                        <?php if (!empty(session()->get('admin_filters'))): ?>
                            <span class="badge bg-success me-1" title="–§–∏–ª—å—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏">
                                <i class="fas fa-check"></i> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ
                            </span>
                        <?php endif; ?>
                    </div>
                </div>
            <?php endif; ?>
        </div>
    </div>

    <!-- –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ -->
    <div id="bulkActions" class="alert alert-info d-none mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-info-circle me-2"></i>
                –í—ã–±—Ä–∞–Ω–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: <span id="selectedCount">0</span>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm" onclick="bulkAction('activate')">
                    <i class="fas fa-check me-1"></i>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button type="button" class="btn btn-warning btn-sm" onclick="bulkAction('deactivate')">
                    <i class="fas fa-pause me-1"></i>–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button type="button" class="btn btn-info btn-sm" onclick="bulkAction('geocode')">
                    <i class="fas fa-map-marker-alt me-1"></i>–ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button type="button" class="btn btn-danger btn-sm" onclick="bulkAction('delete')">
                    <i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å
                </button>
            </div>
        </div>
    </div>
    
    <!-- –¢–∞–±–ª–∏—Ü–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ -->
    <div class="card shadow">
        <div class="card-header py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">
                    <?php
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤
                    $headerText = '–°–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤';
                    
                    if (($filters['status'] ?? 'active') === 'active') {
                        $headerText = '‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã';
                    } elseif (($filters['status'] ?? '') === 'inactive') {
                        $headerText = '‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã';
                    } elseif (empty($filters['status']) && $show_all) {
                        $headerText = 'üîç –í—Å–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã';
                    }
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –µ—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ç–∏–≤–µ–Ω
                    if (!empty($filters['restaurant_type'])) {
                        $typeLabels = [
                            'georgian' => 'üá¨üá™ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–µ',
                            'non_georgian' => 'üçΩÔ∏è –æ–±—ã—á–Ω—ã–µ',
                            'undetermined' => '‚ùì –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ',
                            'auto_detected' => '‚ö†Ô∏è —Ç—Ä–µ–±—É—é—â–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏'
                        ];
                        
                        $typeLabel = $typeLabels[$filters['restaurant_type']] ?? $filters['restaurant_type'];
                        $headerText .= " ({$typeLabel})";
                    }
                    
                    echo $headerText;
                    ?>
                    
                    <?php if (isset($total_restaurants)): ?>
                        <small class="text-muted ms-2">
                            (<?= count($restaurants) ?> –∏–∑ <?= $total_restaurants ?>)
                        </small>
                    <?php else: ?>
                        <small class="text-muted ms-2">
                            (<?= count($restaurants) ?>)
                        </small>
                    <?php endif; ?>
                </h6>
                <div class="btn-group btn-group-sm">
                    <button type="button" class="btn btn-outline-secondary" onclick="exportResults()">
                        <i class="fas fa-download me-1"></i>–≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                    <button type="button" class="btn btn-outline-info" onclick="refreshResults()">
                        <i class="fas fa-sync me-1"></i>–û–±–Ω–æ–≤–∏—Ç—å
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <?php if (!empty($restaurants)): ?>
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th width="40">
                                    <input type="checkbox" id="selectAll" class="form-check-input">
                                </th>
                                <th>–†–µ—Å—Ç–æ—Ä–∞–Ω</th>
                                <th>–ì–æ—Ä–æ–¥</th>
                                <th>–¢–∏–ø</th>
                                <th>–î–∞–Ω–Ω—ã–µ</th>
                                <th>–°—Ç–∞—Ç—É—Å</th>
                                <th>–î–∞—Ç–∞</th>
                                <th width="130">–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($restaurants as $restaurant): ?>
                                <tr>
                                    <td>
                                        <input type="checkbox" class="form-check-input restaurant-checkbox" 
                                               value="<?= $restaurant['id'] ?>">
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ç–∏–ø–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ -->
                                            <div class="me-2">
                                                <?php if (!empty($restaurant['google_place_id'])): ?>
                                                    <i class="fab fa-google text-success" title="Google Places"></i>
                                                <?php endif; ?>
                                                <?php if (!empty($restaurant['website'])): ?>
                                                    <i class="fas fa-globe text-info ms-1" title="–í–µ–±-—Å–∞–π—Ç"></i>
                                                <?php endif; ?>
                                            </div>
                                            <div>
                                                <strong class="text-dark"><?= esc($restaurant['name']) ?></strong>
                                                <?php if (!empty($restaurant['address'])): ?>
                                                    <br><small class="text-muted">
                                                        <?= esc(mb_substr($restaurant['address'], 0, 60)) ?>
                                                        <?= mb_strlen($restaurant['address']) > 60 ? '...' : '' ?>
                                                    </small>
                                                <?php endif; ?>
                                                <?php if (!empty($restaurant['phone'])): ?>
                                                    <br><small class="text-info">
                                                        <i class="fas fa-phone fa-sm me-1"></i><?= esc($restaurant['phone']) ?>
                                                    </small>
                                                <?php endif; ?>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <?php if (!empty($restaurant['city_name'])): ?>
                                            <span class="badge bg-secondary"><?= esc($restaurant['city_name']) ?></span>
                                        <?php else: ?>
                                            <span class="text-muted">–ù–µ —É–∫–∞–∑–∞–Ω</span>
                                        <?php endif; ?>
                                    </td>
                                    <td>
                                        <?php
                                        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –ø–æ –ø–æ–ª—é is_georgian
                                        $isGeorgian = $restaurant['is_georgian'];
                                        
                                        if ($isGeorgian === '1' || $isGeorgian === 1) {
                                            // –¢–æ—á–Ω–æ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π
                                            echo '<span class="badge bg-success restaurant-type-badge" 
                                                        data-restaurant-id="' . $restaurant['id'] . '" 
                                                        data-current-type="georgian" 
                                                        title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –∫–∞–∫ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω. –ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è." 
                                                        style="cursor: pointer;">
                                                    <i class="fas fa-flag"></i> –ì—Ä—É–∑–∏–Ω—Å–∫–∏–π
                                                  </span>';
                                        } elseif ($isGeorgian === '0' || $isGeorgian === 0) {
                                            // –¢–æ—á–Ω–æ –Ω–µ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π
                                            echo '<span class="badge bg-secondary restaurant-type-badge" 
                                                        data-restaurant-id="' . $restaurant['id'] . '" 
                                                        data-current-type="non_georgian" 
                                                        title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω. –ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è." 
                                                        style="cursor: pointer;">
                                                    <i class="fas fa-times"></i> –û–±—ã—á–Ω—ã–π
                                                  </span>';
                                        } else {
                                            // –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ (null) - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
                                            $autoDetected = false;
                                            $georgianIndicators = [];
                                            
                                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                                            $category = strtolower($restaurant['category'] ?? '');
                                            if (strpos($category, 'georgian') !== false || strpos($category, '–≥—Ä—É–∑–∏–Ω') !== false) {
                                                $autoDetected = true;
                                                $georgianIndicators[] = '–∫–∞—Ç–µ–≥–æ—Ä–∏—è';
                                            }
                                            
                                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                                            $name = strtolower($restaurant['name'] ?? '');
                                            $georgianKeywords = ['georgian', 'georgia', 'tbilisi', 'khachapuri', 'khinkali', 'adjarian', 'supra', 'caucas', '–≥—Ä—É–∑–∏–Ω', '—Ç–±–∏–ª–∏—Å–∏', '—Ö–∞—á–∞–ø—É—Ä–∏', '—Ö–∏–Ω–∫–∞–ª–∏'];
                                            foreach ($georgianKeywords as $keyword) {
                                                if (strpos($name, $keyword) !== false) {
                                                    $autoDetected = true;
                                                    $georgianIndicators[] = '–Ω–∞–∑–≤–∞–Ω–∏–µ';
                                                    break;
                                                }
                                            }
                                            
                                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                                            $description = strtolower($restaurant['description'] ?? '');
                                            foreach ($georgianKeywords as $keyword) {
                                                if (strpos($description, $keyword) !== false) {
                                                    $autoDetected = true;
                                                    if (!in_array('–æ–ø–∏—Å–∞–Ω–∏–µ', $georgianIndicators)) {
                                                        $georgianIndicators[] = '–æ–ø–∏—Å–∞–Ω–∏–µ';
                                                    }
                                                    break;
                                                }
                                            }
                                            
                                            if ($autoDetected) {
                                                echo '<span class="badge bg-warning text-dark restaurant-type-badge" 
                                                            data-restaurant-id="' . $restaurant['id'] . '" 
                                                            data-current-type="auto_detected" 
                                                            title="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π –ø–æ: ' . implode(', ', $georgianIndicators) . '. –ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è." 
                                                            style="cursor: pointer;">
                                                        <i class="fas fa-question"></i> –í–æ–∑–º–æ–∂–Ω–æ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π
                                                      </span>';
                                            } else {
                                                echo '<span class="badge bg-light text-dark restaurant-type-badge" 
                                                            data-restaurant-id="' . $restaurant['id'] . '" 
                                                            data-current-type="undetermined" 
                                                            title="–¢–∏–ø –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω. –ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∏–ø–∞." 
                                                            style="cursor: pointer;">
                                                        <i class="fas fa-question-circle"></i> –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
                                                      </span>';
                                            }
                                        }
                                        ?>
                                        
                                        <!-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–¥ —Ç–∏–ø–æ–º, –µ—Å–ª–∏ –µ—Å—Ç—å -->
                                        <?php if (!empty($restaurant['rating'])): ?>
                                            <?php 
                                            $rating = floatval($restaurant['rating']);
                                            $badge_class = $rating >= 4.5 ? 'success' : ($rating >= 4.0 ? 'warning' : 'secondary');
                                            ?>
                                            <br><small class="badge bg-<?= $badge_class ?> bg-opacity-75">
                                                <i class="fas fa-star fa-sm"></i> <?= number_format($rating, 1) ?>
                                            </small>
                                        <?php endif; ?>
                                        
                                        <!-- –£—Ä–æ–≤–µ–Ω—å —Ü–µ–Ω -->
                                        <?php if (!empty($restaurant['price_level']) && $restaurant['price_level'] > 0): ?>
                                            <br><small class="text-success">
                                                <?= str_repeat('$', intval($restaurant['price_level'])) ?>
                                            </small>
                                        <?php endif; ?>
                                    </td>
                                    <td>
                                        <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö -->
                                        <div class="d-flex flex-wrap gap-1">
                                            <?php if (!empty($restaurant['latitude']) && !empty($restaurant['longitude'])): ?>
                                                <span class="badge bg-success" title="–ï—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã">
                                                    <i class="fas fa-map-marker-alt"></i>
                                                </span>
                                            <?php else: ?>
                                                <span class="badge bg-danger" title="–ù–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç">
                                                    <i class="fas fa-map-marker-alt"></i>
                                                </span>
                                            <?php endif; ?>

                                            <?php if (!empty($restaurant['google_place_id'])): ?>
                                                <span class="badge bg-success" title="–ï—Å—Ç—å Google Place ID">
                                                    <i class="fab fa-google"></i>
                                                </span>
                                            <?php else: ?>
                                                <span class="badge bg-secondary" title="–ù–µ—Ç Google Place ID">
                                                    <i class="fab fa-google"></i>
                                                </span>
                                            <?php endif; ?>

                                            <!-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π -->
                                            <?php 
                                            $hasPhotos = false;
                                            try {
                                                $photoModel = new \App\Models\RestaurantPhotoModel();
                                                $photosCount = $photoModel->where('restaurant_id', $restaurant['id'])->countAllResults();
                                                $hasPhotos = $photosCount > 0;
                                            } catch (Exception $e) {
                                                // –ú–æ–¥–µ–ª—å —Ñ–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                                            }
                                            ?>
                                            <?php if ($hasPhotos): ?>
                                                <span class="badge bg-info" title="–ï—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏">
                                                    <i class="fas fa-images"></i>
                                                </span>
                                            <?php else: ?>
                                                <span class="badge bg-secondary" title="–ù–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π">
                                                    <i class="fas fa-images"></i>
                                                </span>
                                            <?php endif; ?>
                                        </div>
                                    </td>
                                    <td>
                                        <?php if ($restaurant['is_active']): ?>
                                            <span class="badge bg-success">
                                                <i class="fas fa-check"></i> –ê–∫—Ç–∏–≤–µ–Ω
                                            </span>
                                        <?php else: ?>
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-pause"></i> –ù–µ–∞–∫—Ç–∏–≤–µ–Ω
                                            </span>
                                        <?php endif; ?>
                                    </td>
                                    <td>
                                        <small class="text-muted">
                                            <?= date('d.m.Y', strtotime($restaurant['created_at'])) ?>
                                        </small>
                                        <?php if ($restaurant['updated_at'] !== $restaurant['created_at']): ?>
                                            <br><small class="text-info" title="–û–±–Ω–æ–≤–ª–µ–Ω">
                                                <i class="fas fa-edit fa-sm"></i> 
                                                <?= date('d.m', strtotime($restaurant['updated_at'])) ?>
                                            </small>
                                        <?php endif; ?>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a href="<?= base_url('admin/restaurants/edit/' . $restaurant['id']) ?>" 
                                               class="btn btn-outline-primary" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-info dropdown-toggle dropdown-toggle-split" 
                                                        data-bs-toggle="dropdown" title="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a class="dropdown-item" href="<?= base_url('admin/restaurants/' . $restaurant['id'] . '/photos') ?>">
                                                            <i class="fas fa-images me-1"></i>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                                                        </a>
                                                    </li>
                                                    <?php if (!empty($restaurant['seo_url'])): ?>
                                                        <li>
                                                            <a class="dropdown-item" href="<?= base_url($restaurant['seo_url']) ?>" target="_blank">
                                                                <i class="fas fa-external-link-alt me-1"></i>–ü—Ä–æ—Å–º–æ—Ç—Ä
                                                            </a>
                                                        </li>
                                                    <?php endif; ?>
                                                    <?php if (!empty($restaurant['google_place_id'])): ?>
                                                        <li>
                                                            <a class="dropdown-item" href="#" onclick="importGooglePhotos(<?= $restaurant['id'] ?>)">
                                                                <i class="fab fa-google me-1"></i>–ò–º–ø–æ—Ä—Ç —Ñ–æ—Ç–æ
                                                            </a>
                                                        </li>
                                                    <?php endif; ?>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <a class="dropdown-item text-danger" href="#" 
                                                           onclick="deleteRestaurant(<?= $restaurant['id'] ?>, '<?= esc($restaurant['name']) ?>')">
                                                            <i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>

                <!-- –ü–∞–≥–∏–Ω–∞—Ü–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø) -->
                <?php if (isset($pager) && method_exists($pager, 'links')): ?>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                –ü–æ–∫–∞–∑–∞–Ω–æ <?= count($restaurants) ?> –∏–∑ <?= $total_restaurants ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' ?> –∑–∞–ø–∏—Å–µ–π
                            </div>
                            <div>
                                <?= $pager->links() ?>
                            </div>
                        </div>
                    </div>
                <?php elseif (isset($pager) && is_array($pager)): ?>
                    <!-- –ï—Å–ª–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–∏—à–ª–∞ –∫–∞–∫ –º–∞—Å—Å–∏–≤ (fallback) -->
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                –ü–æ–∫–∞–∑–∞–Ω–æ <?= count($restaurants) ?> –∏–∑ <?= $total_restaurants ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' ?> –∑–∞–ø–∏—Å–µ–π
                            </div>
                            <div>
                                <nav aria-label="Page navigation">
                                    <ul class="pagination pagination-sm">
                                        <?php if ($pager['hasPrev']): ?>
                                            <li class="page-item">
                                                <a class="page-link" href="<?= current_url() ?>?page=<?= $pager['currentPage'] - 1 ?>&<?= http_build_query($filters) ?>">
                                                    <i class="fas fa-chevron-left"></i>
                                                </a>
                                            </li>
                                        <?php endif; ?>
                                        
                                        <?php for ($i = max(1, $pager['currentPage'] - 2); $i <= min($pager['totalPages'], $pager['currentPage'] + 2); $i++): ?>
                                            <li class="page-item <?= $i == $pager['currentPage'] ? 'active' : '' ?>">
                                                <a class="page-link" href="<?= current_url() ?>?page=<?= $i ?>&<?= http_build_query($filters) ?>">
                                                    <?= $i ?>
                                                </a>
                                            </li>
                                        <?php endfor; ?>
                                        
                                        <?php if ($pager['hasNext']): ?>
                                            <li class="page-item">
                                                <a class="page-link" href="<?= current_url() ?>?page=<?= $pager['currentPage'] + 1 ?>&<?= http_build_query($filters) ?>">
                                                    <i class="fas fa-chevron-right"></i>
                                                </a>
                                            </li>
                                        <?php endif; ?>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                <?php endif; ?>

            <?php else: ?>
                <!-- –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ -->
                <div class="text-center py-5">
                    <i class="fas fa-utensils fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h5>
                    <p class="text-muted">
                        <?php if (!empty(array_filter($filters))): ?>
                            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ 
                            <a href="<?= base_url('admin/restaurants') ?>">—Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</a>
                        <?php else: ?>
                            –ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É
                        <?php endif; ?>
                    </p>
                    <div class="mt-3">
                        <a href="<?= base_url('admin/restaurants/add') ?>" class="btn btn-primary me-2">
                            <i class="fas fa-plus me-1"></i>–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω
                        </a>
                        <a href="<?= base_url('admin/import') ?>" class="btn btn-info">
                            <i class="fas fa-download me-1"></i>–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                        </a>
                    </div>
                </div>
            <?php endif; ?>
        </div>
    </div>
</div>

<?= $this->endSection() ?>

<?= $this->section('scripts') ?>
<script>
$(document).ready(function() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —á–µ–∫–±–æ–∫—Å–æ–≤
    $('#selectAll').on('change', function() {
        $('.restaurant-checkbox').prop('checked', this.checked);
        updateBulkActions();
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —á–µ–∫–±–æ–∫—Å–æ–≤
    $('.restaurant-checkbox').on('change', function() {
        updateBulkActions();
        updateSelectAllState();
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    $('#city, #status, #data_filter, #restaurant_type').on('change', function() {
        // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä show_all –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const form = $('#filterForm');
        const currentAction = form.attr('action') || window.location.pathname;
        form.attr('action', currentAction.split('?')[0]);
        form.submit();
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ Enter
    $('#search').on('keypress', function(e) {
        if (e.which === 13) {
            $('#filterForm').submit();
        }
    });
    
    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ Escape
    $('#search').on('keyup', function(e) {
        if (e.which === 27) { // Escape
            $(this).val('');
            $('#filterForm').submit();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –±–µ–π–¥–∂–∞–º —Ç–∏–ø–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    $(document).on('click', '.restaurant-type-badge', function(e) {
        e.preventDefault();
        
        const restaurantId = $(this).data('restaurant-id');
        const currentType = $(this).data('current-type');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
        showTypeChangeMenu(restaurantId, currentType, e.pageX, e.pageY);
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    $(document).on('click', function(e) {
        if (!$(e.target).closest('.type-context-menu').length) {
            $('.type-context-menu').remove();
        }
    });
});

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞
function showTypeChangeMenu(restaurantId, currentType, x, y) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ–Ω—é
    $('.type-context-menu').remove();
    
    const menu = $(`
        <div class="type-context-menu" style="position: fixed; top: ${y}px; left: ${x}px; z-index: 9999;">
            <div class="card shadow">
                <div class="card-body p-2">
                    <div class="btn-group-vertical w-100">
                        <button type="button" class="btn btn-sm btn-success" onclick="setRestaurantType(${restaurantId}, 'georgian')" ${currentType === 'georgian' ? 'disabled' : ''}>
                            <i class="fas fa-flag"></i> –ì—Ä—É–∑–∏–Ω—Å–∫–∏–π
                        </button>
                        <button type="button" class="btn btn-sm btn-secondary" onclick="setRestaurantType(${restaurantId}, 'non_georgian')" ${currentType === 'non_georgian' ? 'disabled' : ''}>
                            <i class="fas fa-times"></i> –û–±—ã—á–Ω—ã–π
                        </button>
                        <button type="button" class="btn btn-sm btn-light" onclick="setRestaurantType(${restaurantId}, 'undetermined')" ${currentType === 'undetermined' ? 'disabled' : ''}>
                            <i class="fas fa-question-circle"></i> –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `);
    
    $('body').append(menu);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        menu.fadeOut(() => menu.remove());
    }, 5000);
}

// –ë—ã—Å—Ç—Ä–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
function setRestaurantType(restaurantId, type) {
    $('.type-context-menu').remove();
    
    $.ajax({
        url: `<?= base_url('admin/restaurants/set-type/') ?>${restaurantId}`,
        method: 'POST',
        data: {
            type: type,
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        success: function(response) {
            if (response.success) {
                showAlert('success', response.message);
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('danger', response.message || '–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞');
            }
        },
        error: function() {
            showAlert('danger', '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞');
        }
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
function autoDetectTypes() {
    if (!confirm('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π?')) {
        return;
    }
    
    $.ajax({
        url: '<?= base_url('admin/restaurants/auto-detect-types') ?>',
        method: 'POST',
        data: {
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        beforeSend: function() {
            showAlert('info', '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤...');
        },
        success: function(response) {
            if (response.success) {
                showAlert('success', response.message);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                if (response.stats) {
                    const stats = response.stats;
                    const details = `
                        <div class="mt-2">
                            <small>
                                –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.total_processed}<br>
                                –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${stats.updated}<br>
                                –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–∑–∏–Ω—Å–∫–∏—Ö: ${stats.georgian_found}<br>
                                –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö: ${stats.remaining_undetermined}
                            </small>
                        </div>
                    `;
                    
                    $('.alert').last().append(details);
                }
                
                setTimeout(() => location.reload(), 3000);
            } else {
                showAlert('danger', response.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è');
            }
        },
        error: function() {
            showAlert('danger', '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è');
        }
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
function updateBulkActions() {
    const selectedCount = $('.restaurant-checkbox:checked').length;
    $('#selectedCount').text(selectedCount);
    
    if (selectedCount > 0) {
        $('#bulkActions').removeClass('d-none');
    } else {
        $('#bulkActions').addClass('d-none');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ"
function updateSelectAllState() {
    const totalCheckboxes = $('.restaurant-checkbox').length;
    const checkedCheckboxes = $('.restaurant-checkbox:checked').length;
    
    $('#selectAll').prop('indeterminate', checkedCheckboxes > 0 && checkedCheckboxes < totalCheckboxes);
    $('#selectAll').prop('checked', checkedCheckboxes === totalCheckboxes);
}

// –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
function clearSearch() {
    $('#search').val('');
    $('#filterForm').submit();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function refreshResults() {
    location.reload();
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function exportResults() {
    const params = new URLSearchParams(window.location.search);
    params.set('export', 'csv');
    window.open('?' + params.toString(), '_blank');
}

// –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
function bulkAction(action) {
    const selectedIds = $('.restaurant-checkbox:checked').map(function() {
        return this.value;
    }).get();
    
    if (selectedIds.length === 0) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ—Å—Ç–æ—Ä–∞–Ω');
        return;
    }
    
    let confirmMessage = `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ ${getActionName(action)} ${selectedIds.length} —Ä–µ—Å—Ç–æ—Ä–∞–Ω(–æ–≤)?`;
    
    if (action === 'delete') {
        confirmMessage = `–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç ${selectedIds.length} —Ä–µ—Å—Ç–æ—Ä–∞–Ω(–æ–≤) –Ω–∞–≤—Å–µ–≥–¥–∞. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`;
    }
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º AJAX –∑–∞–ø—Ä–æ—Å
    $.ajax({
        url: '<?= base_url('admin/restaurants/bulk') ?>',
        method: 'POST',
        data: {
            action: action,
            ids: selectedIds,
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        beforeSend: function() {
            $('#bulkActions button').prop('disabled', true);
            showAlert('info', `–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ${getActionName(action)}...`);
        },
        success: function(response) {
            if (response.success) {
                showAlert('success', response.message || '–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
                setTimeout(() => location.reload(), 1500);
            } else {
                showAlert('danger', response.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
            }
        },
        error: function(xhr) {
            let errorMessage = '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞';
            try {
                const response = JSON.parse(xhr.responseText);
                errorMessage = response.message || errorMessage;
            } catch (e) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            }
            showAlert('danger', errorMessage);
        },
        complete: function() {
            $('#bulkActions button').prop('disabled', false);
        }
    });
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
function getActionName(action) {
    const actions = {
        'activate': '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',
        'deactivate': '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å', 
        'delete': '—É–¥–∞–ª–∏—Ç—å',
        'geocode': '–≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å'
    };
    return actions[action] || action;
}

// –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
function deleteRestaurant(id, name) {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω "${name}"?`)) {
        return;
    }
    
    $.ajax({
        url: `<?= base_url('admin/restaurants/delete/') ?>${id}`,
        method: 'DELETE',
        data: {
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        success: function(response) {
            if (response.success) {
                showAlert('success', '–†–µ—Å—Ç–æ—Ä–∞–Ω —É–¥–∞–ª–µ–Ω');
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('danger', response.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
            }
        },
        error: function() {
            showAlert('danger', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞');
        }
    });
}

// –ò–º–ø–æ—Ä—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ Google
function importGooglePhotos(restaurantId) {
    $.ajax({
        url: `<?= base_url('admin/restaurants/') ?>${restaurantId}/import-google-photos`,
        method: 'POST',
        data: {
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        beforeSend: function() {
            showAlert('info', '–ò–º–ø–æ—Ä—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...');
        },
        success: function(response) {
            if (response.success) {
                showAlert('success', response.message);
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ
                setTimeout(() => location.reload(), 2000);
            } else {
                showAlert('danger', response.message || '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞');
            }
        },
        error: function() {
            showAlert('danger', '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π');
        }
    });
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(type, message) {
    const alertClass = `alert-${type}`;
    const iconClass = type === 'success' ? 'check-circle' : 
                     type === 'danger' ? 'exclamation-circle' : 
                     type === 'warning' ? 'exclamation-triangle' : 'info-circle';
    
    const alert = `
        <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
             style="top: 20px; right: 20px; z-index: 9999; min-width: 300px; max-width: 500px;">
            <i class="fas fa-${iconClass} me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    $('body').append(alert);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–∫—Ä–æ–º–µ –æ—à–∏–±–æ–∫)
    if (type !== 'danger') {
        setTimeout(function() {
            $('.alert').last().fadeOut('slow', function() {
                $(this).remove();
            });
        }, 5000);
    }
}
//–ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º
$(document).ready(function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkRememberStatus();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è "–ó–∞–ø–æ–º–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
    $('#rememberFilters').on('change', function() {
        const isChecked = this.checked;
        
        if (isChecked) {
            // –í–∫–ª—é—á–∞–µ–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
            saveCurrentFilters();
            showAlert('success', '–ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤–∫–ª—é—á–µ–Ω–æ');
        } else {
            // –í—ã–∫–ª—é—á–∞–µ–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - –æ—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
            clearSavedFilters();
            showAlert('info', '–ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
        }
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ)
    $('#city, #status, #data_filter, #restaurant_type').on('change', function() {
        if ($('#rememberFilters').is(':checked')) {
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            setTimeout(() => {
                saveCurrentFiltersQuietly();
            }, 100);
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        $('#filterForm').submit();
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ Enter —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    $('#search').on('keypress', function(e) {
        if (e.which === 13) {
            if ($('#rememberFilters').is(':checked')) {
                saveCurrentFiltersQuietly();
            }
            $('#filterForm').submit();
        }
    });
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...
    $('.restaurant-checkbox').on('change', function() {
        updateBulkActions();
        updateSelectAllState();
    });
    
    $('#selectAll').on('change', function() {
        $('.restaurant-checkbox').prop('checked', this.checked);
        updateBulkActions();
    });
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function checkRememberStatus() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    $.ajax({
        url: '<?= base_url('admin/filters/status') ?>',
        method: 'GET',
        dataType: 'json',
        success: function(response) {
            if (response.has_saved_filters) {
                $('#rememberFilters').prop('checked', true);
            }
        },
        error: function() {
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ API, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
            const hasActiveFilters = <?= !empty(array_filter($filters)) ? 'true' : 'false' ?>;
            if (hasActiveFilters) {
                $('#rememberFilters').prop('checked', true);
            }
        }
    });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function saveCurrentFilters() {
    const filters = getFormFilters();
    
    $.ajax({
        url: '<?= base_url('admin/filters/save') ?>',
        method: 'POST',
        data: {
            filters: filters,
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        success: function(response) {
            if (response.success) {
                updateFilterBadges();
                showAlert('success', '–§–∏–ª—å—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
            }
        },
        error: function() {
            showAlert('danger', '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤');
        }
    });
}

// –¢–∏—Ö–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function saveCurrentFiltersQuietly() {
    const filters = getFormFilters();
    
    $.ajax({
        url: '<?= base_url('admin/filters/save') ?>',
        method: 'POST',
        data: {
            filters: filters,
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json'
        // –ë–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è —Ç–∏—Ö–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    });
}

// –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function clearSavedFilters() {
    $.ajax({
        url: '<?= base_url('admin/filters/clear') ?>',
        method: 'POST',
        data: {
            '<?= csrf_token() ?>': '<?= csrf_hash() ?>'
        },
        dataType: 'json',
        success: function(response) {
            updateFilterBadges();
        }
    });
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ —Ñ–æ—Ä–º—ã
function getFormFilters() {
    return {
        search: $('#search').val(),
        city_id: $('#city').val(),
        restaurant_type: $('#restaurant_type').val(),
        status: $('#status').val(),
        data_filter: $('#data_filter').val()
    };
}

// –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
function resetFilters() {
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    $('#filterForm')[0].reset();
    
    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –æ—á–∏—â–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    if ($('#rememberFilters').is(':checked')) {
        clearSavedFilters();
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —á–∏—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    window.location.href = '<?= base_url('admin/restaurants') ?>';
}

// –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ
function clearAllFilters() {
    if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ?')) {
        // –û—Ç–∫–ª—é—á–∞–µ–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        $('#rememberFilters').prop('checked', false);
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        clearSavedFilters();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —á–∏—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = '<?= base_url('admin/restaurants') ?>';
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
function removeFilter(filterKey) {
    const currentUrl = new URL(window.location);
    const params = new URLSearchParams(currentUrl.search);
    
    // –ú–∞–ø–ø–∏–Ω–≥ –∏–º–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const paramMapping = {
        'city_id': 'city',
        'restaurant_type': 'restaurant_type',
        'status': 'status',
        'data_filter': 'data_filter',
        'search': 'search'
    };
    
    const paramName = paramMapping[filterKey] || filterKey;
    params.delete(paramName);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º URL
    currentUrl.search = params.toString();
    window.location.href = currentUrl.toString();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function updateFilterBadges() {
    // –î–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º –±–µ–π–¥–∂ "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ"
    const hasSaved = $('#rememberFilters').is(':checked');
    const savedBadge = $('.badge:contains("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ")');
    
    if (hasSaved && savedBadge.length === 0) {
        $('.badge').last().after('<span class="badge bg-success me-1" title="–§–∏–ª—å—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏"><i class="fas fa-check"></i> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ</span>');
    } else if (!hasSaved && savedBadge.length > 0) {
        savedBadge.remove();
    }
}

// –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
function clearSearch() {
    $('#search').val('');
    if ($('#rememberFilters').is(':checked')) {
        saveCurrentFiltersQuietly();
    }
    $('#filterForm').submit();
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(type, message) {
    const alertClass = `alert-${type}`;
    const iconClass = type === 'success' ? 'check-circle' : 
                     type === 'danger' ? 'exclamation-circle' : 
                     type === 'warning' ? 'exclamation-triangle' : 'info-circle';
    
    const alert = `
        <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
             style="top: 20px; right: 20px; z-index: 9999; min-width: 300px; max-width: 500px;">
            <i class="fas fa-${iconClass} me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    $('body').append(alert);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(function() {
        $('.alert').last().fadeOut('slow', function() {
            $(this).remove();
        });
    }, 3000);
}

</script>



<?= $this->endSection() ?>